// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from test_msgs:action/Fibonacci.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package test_msgs.action.pb;

import "builtin_interfaces/msg/Time.proto";
import "unique_identifier_msgs/msg/UUID.proto";

option cc_generic_services = true;

message Fibonacci_Goal
{

  sfixed32 order = 355054304;
}

message Fibonacci_SendGoal_Request
{

  unique_identifier_msgs.msg.pb.UUID goal_id = 108866210;
  test_msgs.action.pb.Fibonacci_Goal goal    = 484248182;
}

message Fibonacci_SendGoal_Response
{

  bool                           accepted = 371066354;
  builtin_interfaces.msg.pb.Time stamp    = 357477059;
}

message Fibonacci_Result
{

  repeated sfixed32 sequence = 310829798;
}

message Fibonacci_GetResult_Request
{

  unique_identifier_msgs.msg.pb.UUID goal_id = 108866210;
}

message Fibonacci_GetResult_Response
{

  int32                                status = 453014720;
  test_msgs.action.pb.Fibonacci_Result result = 325764348;
}

message Fibonacci_Feedback
{

  repeated sfixed32 sequence = 310829798;
}

message Fibonacci_FeedbackMessage
{

  unique_identifier_msgs.msg.pb.UUID     goal_id  = 108866210;
  test_msgs.action.pb.Fibonacci_Feedback feedback = 304701367;
}

service Fibonacci
{
  rpc SendGoal (Fibonacci_SendGoal_Request) returns (Fibonacci_SendGoal_Response);
  rpc GetResult (Fibonacci_GetResult_Request) returns (Fibonacci_GetResult_Response);
}